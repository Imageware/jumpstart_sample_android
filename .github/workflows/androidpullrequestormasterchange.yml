name: Android CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout from Git
      uses: actions/checkout@v2

    - name: Read full CHANGELOG
      id: changelog
      run: echo "::set-output name=body::$(cat changelog.md)"

    - name: Read CHANGELOG for only the latest version
      id: changelogLatest
      run: |
        echo "::echo::on"
        CHANGELOG=""$(grep -A 9999 "## " changelog.md | grep -B 9999 -m2 "## " | sed '$d' | sed '$d' | sed 's/## //g')""
        echo ""Got changelog: $CHANGELOG""
        echo 'CHANGELOG_LATEST<<EOF' >> $GITHUB_ENV
        echo ""$CHANGELOG"" >> $GITHUB_ENV
        echo 'EOF' >> $GITHUB_ENV

    - name: Test latest version CHANGELOG output
      run: echo "${{ env.CHANGELOG_LATEST }}"

    - uses: actions/setup-java@v1
      with:
        java-version: 11

    - name: Cache Gradle dependencies
      uses: actions/cache@v2
      with:
        path: ~/.gradle
        key: ${{ runner.os }}-gradle-full-${{ hashFiles('**/*.gradle*') }}
        restore-keys: |
          ${{ runner.os }}-gradle-full-


    - name: Insert AWS credentials to enable build
      id: insertAwsCreds
      run: |
        sed -i 's/accessKey = "PLEASE_LOOK_FOR_CREDENTIALS_AND_CONFIGURATION"/accessKey = "${{ secrets.AWS_S3_ACCESS_KEY_ID }}"/g' build.gradle
        sed -i 's/secretKey = "PLEASE_LOOK_FOR_CREDENTIALS_AND_CONFIGURATION"/secretKey = "${{ secrets.AWS_S3_ACCESS_KEY }}"/g' build.gradle


    - name: Build with Gradle
      id: build
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_S3_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_S3_ACCESS_KEY }}
      run: ./gradlew assembleDebug -x lint

    - name: Organize artifacts in folder
      run: |
        mkdir -p ${{ github.workspace }}/artifact
        cp -v performTenant2faValidation.* ${{ github.workspace }}/artifact/
        cp -v README.md ${{ github.workspace }}/artifact/
        cp -v iwasdksampleapp/build/outputs/apk/debug/iwasdksampleapp-debug.apk ${{ github.workspace }}/artifact/iwa_sdk_sample_app.apk

    - name: Upload Release artifact folder
      id: upload
      uses: actions/upload-artifact@v2
      with:
        name: IWA_SDK_Sample_App_Package
        path: ${{ github.workspace }}/artifact/**/*

    - name: Slack Notification
      uses: rtCamp/action-slack-notify@v2.0.2
      env:
        SLACK_CHANNEL: android-dev-botfeed
        SLACK_COLOR: '#3278BD'
        SLACK_ICON: https://github.com/rtCamp.png?size=48
        SLACK_TITLE: New IWA SDK Sample App
        SLACK_MESSAGE: |
          New IWA SDK Sample App test build available on Github Artifacts :rocket:
          <https://github.com/ImageWare/jumpstart_sample_android/actions/runs/${{ github.run_id }}|Build job and Artifacts>
          <https://imageware.atlassian.net/wiki/spaces/MA/pages/755204122/How+To+Integrate+Sample+App+Details|How To Use Sample App>
          <https://imageware.atlassian.net/wiki/spaces/MA/pages/704938246/Integration.txt+for+adding+GMI+SDK+libraries+to+an+app|SDK integration.txt>
          ```Changelog:
          ${{ env.CHANGELOG_LATEST }}```
        SLACK_USERNAME: GithubActions
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
